<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>LLM | Fine-tuning is All You Need</title>
      <link href="/2023/12/13/llm-fine-tuning-is-all-you-need/"/>
      <url>/2023/12/13/llm-fine-tuning-is-all-you-need/</url>
      
        <content type="html"><![CDATA[<h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract:"></a>Abstract:</h1><p>In this article, we explore the process of fine-tuning the Llama2 model for dialogue summarization using the SAMSum dataset. The process involves package installation, model loading, data formatting, training setup, model evaluation, and saving the fine-tuned model for future use.</p><h1 id="Load-Llama2-got-summarize-task"><a href="#Load-Llama2-got-summarize-task" class="headerlink" title="Load Llama2 got summarize task"></a>Load Llama2 got summarize task</h1><h3 id="Package-Installation-and-Hugging-Face-CLI-Login"><a href="#Package-Installation-and-Hugging-Face-CLI-Login" class="headerlink" title="Package Installation and Hugging Face CLI Login"></a>Package Installation and Hugging Face CLI Login</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">!pip install \\accelerate<span class="token operator">==</span><span class="token number">0.23</span><span class="token number">.0</span> bitsandbytes<span class="token operator">==</span><span class="token number">0.41</span><span class="token number">.1</span> datasets<span class="token operator">==</span><span class="token number">2.13</span><span class="token number">.0</span> openai<span class="token operator">==</span><span class="token number">0.28</span><span class="token number">.1</span> \\peft<span class="token operator">==</span><span class="token number">0.4</span><span class="token number">.0</span> safetensors<span class="token operator">==</span><span class="token number">0.4</span><span class="token number">.0</span> transformers<span class="token operator">==</span><span class="token number">4.34</span><span class="token number">.0</span> trl<span class="token operator">==</span><span class="token number">0.4</span><span class="token number">.7</span> py7zr<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>This line installs specific versions of Python libraries using <code>pip</code>. Here’s what each library is typically used for:</p><ul><li><code>accelerate</code>: Simplifies running PyTorch models on multi-GPU/multi-TPU setups.</li><li><code>bitsandbytes</code>: Enhances training large neural networks using reduced precision and memory footprint techniques.</li><li><code>datasets</code>: Provides a simple interface to download, preprocess, and use datasets.</li><li><code>openai</code>: Facilitates interaction with OpenAI services.</li><li><code>peft</code>: Contains tools for Parameter-Efficient Fine-Tuning of models, like LoRA.</li><li><code>safetensors</code>: A format for safely storing tensors.</li><li><code>transformers</code>: Provides thousands of pre-trained models to perform tasks on texts.</li><li><code>trl</code>: Token-level Reinforcement Learning for fine-tuning language models.</li><li><code>py7zr</code>: A compression and decompression library, handling .7z files.</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">!huggingface<span class="token operator">-</span>cli login<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>This command is used to authenticate with the Hugging Face Hub via the CLI. It typically requires an API key, which should be handled securely.</p><h3 id="Importing-Libraries-and-Loading-Model"><a href="#Importing-Libraries-and-Loading-Model" class="headerlink" title="Importing Libraries and Loading Model"></a>Importing Libraries and Loading Model</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">from</span> transformers <span class="token keyword">import</span> AutoModelForCausalLM<span class="token punctuation">,</span> BitsAndBytesConfig<span class="token keyword">from</span> peft <span class="token keyword">import</span> prepare_model_for_kbit_training<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>These lines import necessary modules:</p><ul><li><code>torch</code>: The main PyTorch library.</li><li><code>AutoModelForCausalLM</code>: A class to load pre-trained causal language models from the <code>transformers</code> library.</li><li><code>BitsAndBytesConfig</code>: Configuration class for the <code>bitsandbytes</code> library to manage model quantization.</li><li><code>prepare_model_for_kbit_training</code>: A function from the <code>peft</code> library to prepare the model for efficient training.</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">model_id <span class="token operator">=</span> <span class="token string">"meta-llama/Llama-2-7b-hf"</span>bnb_config <span class="token operator">=</span> BitsAndBytesConfig<span class="token punctuation">(</span>    load_in_4bit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>    bnb_4bit_quant_type<span class="token operator">=</span><span class="token string">"nf4"</span><span class="token punctuation">,</span>    bnb_4bit_use_double_quant<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>    bnb_4bit_compute_dtype<span class="token operator">=</span>torch<span class="token punctuation">.</span>bfloat16<span class="token punctuation">)</span>model <span class="token operator">=</span> AutoModelForCausalLM<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span>    model_id<span class="token punctuation">,</span>    quantization_config<span class="token operator">=</span>bnb_config<span class="token punctuation">,</span>    use_cache<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>    device_map<span class="token operator">=</span><span class="token string">"auto"</span><span class="token punctuation">,</span><span class="token punctuation">)</span>model <span class="token operator">=</span> prepare_model_for_kbit_training<span class="token punctuation">(</span>model<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Here you configure and load a pre-trained model:</p><ul><li><code>model_id</code>: Specifies the model to load.</li><li><code>bnb_config</code>: Sets up the model to use 4-bit quantization with a specific configuration for reduced precision.</li><li><code>from_pretrained</code>: Loads the model with the specified <code>bnb_config</code>.</li><li>The model is then prepared for efficient training with the <code>prepare_model_for_kbit_training</code> function.</li></ul><h3 id="Configuring-the-Model-with-LoRA-and-PEFT"><a href="#Configuring-the-Model-with-LoRA-and-PEFT" class="headerlink" title="Configuring the Model with LoRA and PEFT"></a>Configuring the Model with LoRA and PEFT</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> transformers <span class="token keyword">import</span> TrainingArguments<span class="token punctuation">,</span> AutoTokenizer<span class="token keyword">from</span> peft <span class="token keyword">import</span> LoraConfig<span class="token punctuation">,</span> get_peft_model<span class="token keyword">from</span> trl <span class="token keyword">import</span> SFTTrainerpeft_config <span class="token operator">=</span> LoraConfig<span class="token punctuation">(</span>    r<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span>    lora_alpha<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span>    lora_dropout<span class="token operator">=</span><span class="token number">0.05</span><span class="token punctuation">,</span>    bias<span class="token operator">=</span><span class="token string">"none"</span><span class="token punctuation">,</span>    task_type<span class="token operator">=</span><span class="token string">"CAUSAL_LM"</span><span class="token punctuation">,</span><span class="token punctuation">)</span>model <span class="token operator">=</span> get_peft_model<span class="token punctuation">(</span>model<span class="token punctuation">,</span> peft_config<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>This section prepares the model for Parameter-Efficient Fine-Tuning:</p><ul><li><code>LoraConfig</code>: Configuration for LoRA (Low-Rank Adaptation), which modifies only a small portion of the model parameters.</li><li><code>get_peft_model</code>: Applies the <code>peft_config</code> to the loaded model, making it ready for efficient fine-tuning.</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">tokenizer <span class="token operator">=</span> AutoTokenizer<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span>model_id<span class="token punctuation">)</span>tokenizer<span class="token punctuation">.</span>pad_token <span class="token operator">=</span> tokenizer<span class="token punctuation">.</span>eos_tokentokenizer<span class="token punctuation">.</span>padding_side <span class="token operator">=</span> <span class="token string">"right"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>These lines set up the tokenizer for the model:</p><ul><li><code>AutoTokenizer</code>: Loads the tokenizer associated with the specified model.</li><li><code>pad_token</code> and <code>padding_side</code>: Configures the tokenizer for how padding should be handled during tokenization.</li></ul><h3 id="Model-Evaluation"><a href="#Model-Evaluation" class="headerlink" title="Model Evaluation"></a>Model Evaluation</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">eval_prompt <span class="token operator">=</span> <span class="token triple-quoted-string string">"""### Instruction:You are a helpful, respectful and honest assistant. Your task is to summarize the following dialogue. Your answer should be based on the provided dialogue only.### Dialogue:A: Hi Tom, are you busy tomorrow’s afternoon?B: I’m pretty sure I am. What’s up?A: Can you go with me to the animal shelter?.B: What do you want to do?A: I want to get a puppy for my son.B: That will make him so happy.A: Yeah, we’ve discussed it many times. I think he’s ready now.B: That’s good. Raising a dog is a tough issue. Like having a baby ;-)A: I'll get him one of those little dogs.B: One that won't grow up too big;-)A: And eat too much;-))B: Do you know which one he would like?A: Oh, yes, I took him there last Monday. He showed me one that he really liked.B: I bet you had to drag him away.A: He wanted to take it home right away ;-).B: I wonder what he'll name it.A: He said he’d name it after his dead hamster – Lemmy  - he's  a great Motorhead fan :-)))---### Summary:"""</span>model_input <span class="token operator">=</span> tokenizer<span class="token punctuation">(</span>eval_prompt<span class="token punctuation">,</span> return_tensors<span class="token operator">=</span><span class="token string">"pt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span><span class="token string">"cuda"</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">with</span> torch<span class="token punctuation">.</span>no_grad<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>tokenizer<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>model<span class="token punctuation">.</span>generate<span class="token punctuation">(</span><span class="token operator">**</span>model_input<span class="token punctuation">,</span> max_new_tokens<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> skip_special_tokens<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Finally, this part sets up and performs the model evaluation:</p><ul><li>The dialogue is tokenized and prepared as input for the model.</li><li>The model is</li></ul><p>set to evaluation mode and generates a response based on the input.</p><ul><li>The output tokens are decoded back into text and printed.</li></ul><h1 id="Load-samsum-dataset-to-fine-tune-llama2"><a href="#Load-samsum-dataset-to-fine-tune-llama2" class="headerlink" title="Load samsum dataset to fine-tune llama2"></a>Load samsum dataset to fine-tune llama2</h1><h3 id="Loading-and-Inspecting-the-Dataset"><a href="#Loading-and-Inspecting-the-Dataset" class="headerlink" title="Loading and Inspecting the Dataset"></a>Loading and Inspecting the Dataset</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> datasets <span class="token keyword">import</span> load_dataset<span class="token comment"># load 1k samples from the train split</span>train_dataset <span class="token operator">=</span> load_dataset<span class="token punctuation">(</span><span class="token string">"samsum"</span><span class="token punctuation">,</span> split<span class="token operator">=</span><span class="token string">'train[:1000]'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>This section uses the <code>datasets</code> library to load the first 1000 samples from the training split of the “samsum” dataset, which contains summaries of dialogues. The SAMSum dataset is designed for dialogue summarization tasks.</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>train_dataset<span class="token punctuation">)</span>train_dataset<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>This prints the structure of the loaded dataset and the first sample, providing insight into the data format and fields available.</p><h3 id="Formatting-the-Data"><a href="#Formatting-the-Data" class="headerlink" title="Formatting the Data"></a>Formatting the Data</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">prompt_formatter</span><span class="token punctuation">(</span>sample<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f"""&lt;s&gt;### Instruction:You are a helpful, respectful and honest assistant. \Your task is to summarize the following dialogue. \Your answer should be based on the provided dialogue only.### Dialogue:</span><span class="token interpolation"><span class="token punctuation">{</span>sample<span class="token punctuation">[</span><span class="token string">'dialogue'</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">### Summary:</span><span class="token interpolation"><span class="token punctuation">{</span>sample<span class="token punctuation">[</span><span class="token string">'summary'</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string"> &lt;/s&gt;"""</span></span>n <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">print</span><span class="token punctuation">(</span>prompt_formatter<span class="token punctuation">(</span>train_dataset<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>This defines a function to format each data sample into a prompt for training a summarization model. The format includes special tokens and structured instructions for the task.</p><h3 id="Setting-Up-the-Trainer"><a href="#Setting-Up-the-Trainer" class="headerlink" title="Setting Up the Trainer"></a>Setting Up the Trainer</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> transformers <span class="token keyword">import</span> TrainingArguments<span class="token keyword">from</span> trl <span class="token keyword">import</span> SFTTrainerargs <span class="token operator">=</span> TrainingArguments<span class="token punctuation">(</span>    output_dir<span class="token operator">=</span><span class="token string">"llama2-7b-chat-samsum"</span><span class="token punctuation">,</span>    num_train_epochs<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>    per_device_train_batch_size<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span>    gradient_accumulation_steps<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>    logging_steps<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span>    save_strategy<span class="token operator">=</span><span class="token string">"epoch"</span><span class="token punctuation">,</span>    learning_rate<span class="token operator">=</span><span class="token number">2e-4</span><span class="token punctuation">,</span>    optim<span class="token operator">=</span><span class="token string">"paged_adamw_32bit"</span><span class="token punctuation">,</span>    bf16<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>    fp16<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>    tf32<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>    max_grad_norm<span class="token operator">=</span><span class="token number">0.3</span><span class="token punctuation">,</span>    warmup_ratio<span class="token operator">=</span><span class="token number">0.03</span><span class="token punctuation">,</span>    lr_scheduler_type<span class="token operator">=</span><span class="token string">"constant"</span><span class="token punctuation">,</span>    disable_tqdm<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Here, you configure the training parameters using the <code>TrainingArguments</code> class from the <code>transformers</code> library. You set various hyperparameters like learning rate, batch size, gradient accumulation, and logging frequency.</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">trainer <span class="token operator">=</span> SFTTrainer<span class="token punctuation">(</span>    model<span class="token operator">=</span>model<span class="token punctuation">,</span>    train_dataset<span class="token operator">=</span>train_dataset<span class="token punctuation">,</span>    peft_config<span class="token operator">=</span>peft_config<span class="token punctuation">,</span>    max_seq_length<span class="token operator">=</span><span class="token number">1024</span><span class="token punctuation">,</span>    tokenizer<span class="token operator">=</span>tokenizer<span class="token punctuation">,</span>    packing<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>    formatting_func<span class="token operator">=</span>prompt_formatter<span class="token punctuation">,</span>    args<span class="token operator">=</span>args<span class="token punctuation">,</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>You initialize the <code>SFTTrainer</code>, which seems to be a specialized trainer class for token-level reinforcement learning or similar training processes. It takes the model, dataset, PEFT configuration, tokenizer, and the training arguments.</p><h3 id="Training-the-Model"><a href="#Training-the-Model" class="headerlink" title="Training the Model"></a>Training the Model</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">trainer<span class="token punctuation">.</span>train<span class="token punctuation">(</span><span class="token punctuation">)</span>trainer<span class="token punctuation">.</span>save_model<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>These commands start the training process and save the model afterward.</p><h3 id="Loading-and-Using-the-Trained-Model"><a href="#Loading-and-Using-the-Trained-Model" class="headerlink" title="Loading and Using the Trained Model"></a>Loading and Using the Trained Model</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">from</span> peft <span class="token keyword">import</span> AutoPeftModelForCausalLM<span class="token keyword">from</span> transformers <span class="token keyword">import</span> AutoTokenizermodel_folder <span class="token operator">=</span> <span class="token string">"llama2-7b-chat-samsum"</span><span class="token comment"># load both the adapter and the base model</span>model <span class="token operator">=</span> AutoPeftModelForCausalLM<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span>    model_folder<span class="token punctuation">,</span>    low_cpu_mem_usage<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>    torch_dtype<span class="token operator">=</span>torch<span class="token punctuation">.</span>float16<span class="token punctuation">,</span>    load_in_4bit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>    device_map<span class="token operator">=</span><span class="token string">'auto'</span><span class="token punctuation">)</span>tokenizer <span class="token operator">=</span> AutoTokenizer<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span>model_folder<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>This section loads the trained model and tokenizer from the specified folder, using classes designed for models fine-tuned with PEFT techniques.</p><h3 id="Generating-a-Summary"><a href="#Generating-a-Summary" class="headerlink" title="Generating a Summary"></a>Generating a Summary</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">prompt <span class="token operator">=</span> <span class="token triple-quoted-string string">"""### Instruction:You are a helpful, respectful and honest assistant. Your task is to summarize the following dialogue. Your answer should be based on the provided dialogue only.### Dialogue:A: Hi Tom, are you busy tomorrow’s afternoon?B: I’m pretty sure I am. What’s up?A: Can you go with me to the animal shelter?.B: What do you want to do?A: I want to get a puppy for my son.B: That will make him so happy.A: Yeah, we’ve discussed it many times. I think he’s ready now.B: That’s good. Raising a dog is a tough issue. Like having a baby ;-)A: I'll get him one of those little dogs.B: One that won't grow up too big;-)A: And eat too much;-))B: Do you know which one he would like?A: Oh, yes, I took him there last Monday. He showed me one that he really liked.B: I bet you had to drag him away.A: He wanted to take it home right away ;-).B: I wonder what he'll name it.A: He said he’d name it after his dead hamster – Lemmy  - he's  a great Motorhead fan :-)))---### Summary:"""</span>input_ids <span class="token operator">=</span> tokenizer<span class="token punctuation">(</span>prompt<span class="token punctuation">,</span> return_tensors<span class="token operator">=</span><span class="token string">"pt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>input_ids<span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span>outputs <span class="token operator">=</span> model<span class="token punctuation">.</span>generate<span class="token punctuation">(</span>input_ids<span class="token operator">=</span>input_ids<span class="token punctuation">,</span> max_new_tokens<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> temperature<span class="token operator">=</span><span class="token number">0.7</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Finally, this part sets up a new prompt, tokenizes it, and generates a summary using the trained model. The <code>generate</code> function is configured to produce a concise continuation, controlled by parameters like <code>max_new_tokens</code> and <code>temperature</code>.</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Output:\\n'</span><span class="token punctuation">,</span>      tokenizer<span class="token punctuation">.</span>batch_decode<span class="token punctuation">(</span>outputs<span class="token punctuation">.</span>detach<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> skip_special_tokens<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span>prompt<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="Save-the-fine-tuned-model"><a href="#Save-the-fine-tuned-model" class="headerlink" title="Save the fine-tuned model"></a>Save the fine-tuned model</h1><p>You’ve successfully fine-tuned a model on dialogue summarization and saved it for later use. Let’s go through the remaining steps:</p><h3 id="Saving-the-Fine-Tuned-Model"><a href="#Saving-the-Fine-Tuned-Model" class="headerlink" title="Saving the Fine-Tuned Model"></a>Saving the Fine-Tuned Model</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">from</span> peft <span class="token keyword">import</span> AutoPeftModelForCausalLMmodel_folder <span class="token operator">=</span> <span class="token string">"llama2-7b-chat-samsum"</span>model <span class="token operator">=</span> AutoPeftModelForCausalLM<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span>    model_folder<span class="token punctuation">,</span>    low_cpu_mem_usage<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>    torch_dtype<span class="token operator">=</span>torch<span class="token punctuation">.</span>float16<span class="token punctuation">)</span><span class="token comment"># Merge the LoRA adapter and the base model</span>merged_model <span class="token operator">=</span> model<span class="token punctuation">.</span>merge_and_unload<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">from</span> transformers <span class="token keyword">import</span> AutoTokenizeroutput_folder <span class="token operator">=</span> <span class="token string">'samsum'</span><span class="token comment"># Save the merged model and the tokenizer</span>merged_model<span class="token punctuation">.</span>save_pretrained<span class="token punctuation">(</span>output_folder<span class="token punctuation">,</span> safe_serialization<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>tokenizer <span class="token operator">=</span> AutoTokenizer<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span>model_folder<span class="token punctuation">)</span>tokenizer<span class="token punctuation">.</span>save_pretrained<span class="token punctuation">(</span>output_folder<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>This section saves the fine-tuned model and the tokenizer for future use. The model is merged to ensure efficient loading and usage.</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">!<span class="token builtin">zip</span> <span class="token operator">-</span>r <span class="token operator">/</span>content<span class="token operator">/</span><span class="token builtin">file</span><span class="token punctuation">.</span><span class="token builtin">zip</span> <span class="token operator">/</span>content<span class="token operator">/</span>samsum<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>You then compress the saved model and tokenizer into a zip file for easier sharing or storage.</p><h3 id="Using-the-Fine-Tuned-Model"><a href="#Using-the-Fine-Tuned-Model" class="headerlink" title="Using the Fine-Tuned Model"></a>Using the Fine-Tuned Model</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">from</span> transformers <span class="token keyword">import</span> AutoTokenizer<span class="token punctuation">,</span> AutoModelForCausalLMmodel_folder <span class="token operator">=</span> <span class="token string">'samsum'</span>tokenizer <span class="token operator">=</span> AutoTokenizer<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span>model_folder<span class="token punctuation">)</span>model <span class="token operator">=</span> AutoModelForCausalLM<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span>    model_folder<span class="token punctuation">,</span>    low_cpu_mem_usage<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>    torch_dtype<span class="token operator">=</span>torch<span class="token punctuation">.</span>float16<span class="token punctuation">,</span>    load_in_4bit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>    device_map<span class="token operator">=</span><span class="token string">"auto"</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>This part loads the fine-tuned model and tokenizer from the saved directory, preparing them for use.</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> transformers <span class="token keyword">import</span> pipeline<span class="token punctuation">,</span> GenerationConfiggen_config <span class="token operator">=</span> GenerationConfig<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span>model_folder<span class="token punctuation">)</span>gen_config<span class="token punctuation">.</span>max_new_tokens <span class="token operator">=</span> <span class="token number">50</span>gen_config<span class="token punctuation">.</span>temperature <span class="token operator">=</span> <span class="token number">0.7</span>gen_config<span class="token punctuation">.</span>repetition_penalty <span class="token operator">=</span> <span class="token number">1.1</span>gen_config<span class="token punctuation">.</span>pad_token_id <span class="token operator">=</span> tokenizer<span class="token punctuation">.</span>eos_token_idpipe <span class="token operator">=</span> pipeline<span class="token punctuation">(</span>    task<span class="token operator">=</span><span class="token string">"text-generation"</span><span class="token punctuation">,</span>    model<span class="token operator">=</span>model<span class="token punctuation">,</span>    tokenizer<span class="token operator">=</span>tokenizer<span class="token punctuation">,</span>    device_map<span class="token operator">=</span><span class="token string">'auto'</span><span class="token punctuation">,</span>    generation_config<span class="token operator">=</span>gen_config<span class="token punctuation">,</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Here, you configure a text generation pipeline using the loaded model and tokenizer. The generation settings are adjusted to control the behavior of the model during text generation.</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">prompt <span class="token operator">=</span> <span class="token triple-quoted-string string">"""### Instruction:You are a helpful, respectful and honest assistant. Your task is to summarize the following dialogue. Your answer should be based on the provided dialogue only.### Dialogue:A: Hi Tom, are you busy tomorrow’s afternoon?B: I’m pretty sure I am. What’s up?A: Can you go with me to the animal shelter?.B: What do you want to do?A: I want to get a puppy for my son.B: That will make him so happy.A: Yeah, we’ve discussed it many times. I think he’s ready now.B: That’s good. Raising a dog is a tough issue. Like having a baby ;-)A: I'll get him one of those little dogs.B: One that won't grow up too big;-)A: And eat too much;-))B: Do you know which one he would like?A: Oh, yes, I took him there last Monday. He showed me one that he really liked.B: I bet you had to drag him away.A: He wanted to take it home right away ;-).B: I wonder what he'll name it.A: He said he’d name it after his dead hamster – Lemmy  - he's  a great Motorhead fan :-)))---### Summary:"""</span>output <span class="token operator">=</span> pipe<span class="token punctuation">(</span>prompt<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Output:\\n'</span><span class="token punctuation">,</span> output<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'generated_text'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span>prompt<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Finally, you provide a prompt to the model and generate a summary based on it. The generated text is then printed out. Overall, these steps demonstrate how to save and reuse a fine-tuned language model for generating summaries based on provided prompts.</p>]]></content>
      
      
      
        <tags>
            
            <tag> LLM </tag>
            
            <tag> Llama2 </tag>
            
            <tag> Colab </tag>
            
            <tag> HuggingFace </tag>
            
            <tag> Fine-tuning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LLM | Embedding is All You Need</title>
      <link href="/2023/12/11/llm-embedding-is-all-you-need/"/>
      <url>/2023/12/11/llm-embedding-is-all-you-need/</url>
      
        <content type="html"><![CDATA[<h2 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract:"></a>Abstract:</h2><p>This article presents an exhaustive guide on leveraging large language models (LLMs) for document retrieval and answering systems using Retrieval-Augmented Generation (RAG). Central to the discourse is the innovative approach of integrating multiple software and libraries, such as Hugging Face’s transformers, Langchain, and custom libraries like llama-index to construct a cohesive and efficient RAG system. The tutorial provides step-by-step instructions on setting up the environment, configuring the LLM, and implementing a query engine. The system utilizes vector storage for document indexing and facilitates real-time query processing. This abstract encapsulates the workflow from installation and configuration to the deployment of a query engine, emphasizing the importance of embedding technologies in the modern information retrieval landscape. The document serves as both a practical guide for developers and a conceptual framework for integrating LLMs into applications, highlighting the efficiency and scalability of embedding-based approaches.</p><h2 id="Flow-of-RAG"><a href="#Flow-of-RAG" class="headerlink" title="Flow of RAG:"></a>Flow of RAG:</h2><p><img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*njagJOgiT-VTJjQ18bugcw.png" alt="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*njagJOgiT-VTJjQ18bugcw.png"></p><p><img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*njagJOgiT-VTJjQ18bugcw.png" alt="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*njagJOgiT-VTJjQ18bugcw.png"></p><h2 id="Step-by-step-tutorial"><a href="#Step-by-step-tutorial" class="headerlink" title="Step by step tutorial:"></a>Step by step tutorial:</h2><p><img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*Xt7hGKpbtPDK_qqxZPmLPw.png" alt="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*Xt7hGKpbtPDK_qqxZPmLPw.png"></p><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference:"></a>Reference:</h3><p><a href="https://towardsdatascience.com/all-you-need-to-know-to-build-your-first-llm-app-eb982c78ffac">https://towardsdatascience.com/all-you-need-to-know-to-build-your-first-llm-app-eb982c78ffac</a></p><h2 id="Colab-x-Llama2-x-Langchain-to-build-a-RAG-system"><a href="#Colab-x-Llama2-x-Langchain-to-build-a-RAG-system" class="headerlink" title="Colab x Llama2 x Langchain to build a RAG system:"></a>Colab x Llama2 x Langchain to build a RAG system:</h2><h3 id="Installation-Commands"><a href="#Installation-Commands" class="headerlink" title="Installation Commands"></a>Installation Commands</h3><p>These lines install the necessary Python packages using pip:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">!pip install pypdf!pip install python<span class="token operator">-</span>dotenv!pip install <span class="token operator">-</span>q transformers einops accelerate langchain bitsandbytes!pip install sentence_transformers!pip install llama<span class="token operator">-</span>index!pip install docx2txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>pypdf</strong>: A library for reading PDF files.</li><li><strong>python-dotenv</strong>: Loads environment variables from a <code>.env</code> file.</li><li><strong>transformers, einops, accelerate, langchain, bitsandbytes</strong>: Libraries for working with deep learning models, particularly for NLP tasks.</li><li><strong>sentence_transformers</strong>: Provides models for generating sentence embeddings.</li><li><strong>llama-index</strong>: A custom library for indexing and retrieving documents using language models.</li><li><strong>docx2txt</strong>: Converts Microsoft Word documents (.docx) to plain text.</li></ul><h3 id="Hugging-Face-Authentication"><a href="#Hugging-Face-Authentication" class="headerlink" title="Hugging Face Authentication"></a>Hugging Face Authentication</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">!huggingface<span class="token operator">-</span>cli login<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>This command authenticates your environment with the Hugging Face Hub, enabling you to download and use models hosted there.</p><h3 id="Import-Statements-and-Logging-Configuration"><a href="#Import-Statements-and-Logging-Configuration" class="headerlink" title="Import Statements and Logging Configuration"></a>Import Statements and Logging Configuration</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> logging<span class="token keyword">import</span> syslogging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span>stream<span class="token operator">=</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span> level<span class="token operator">=</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">)</span>logging<span class="token punctuation">.</span>getLogger<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>addHandler<span class="token punctuation">(</span>logging<span class="token punctuation">.</span>StreamHandler<span class="token punctuation">(</span>stream<span class="token operator">=</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>Imports</strong>: Necessary libraries for the script are imported here.</li><li><strong>Logging Setup</strong>: Configures Python’s logging module to print all INFO level messages to the standard output. This helps in debugging by providing runtime information.</li></ul><h3 id="LLM-Initialization"><a href="#LLM-Initialization" class="headerlink" title="LLM Initialization"></a>LLM Initialization</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> llama_index <span class="token keyword">import</span> VectorStoreIndex<span class="token punctuation">,</span> SimpleDirectoryReader<span class="token punctuation">,</span> ServiceContext<span class="token keyword">from</span> llama_index<span class="token punctuation">.</span>llms <span class="token keyword">import</span> HuggingFaceLLMllm <span class="token operator">=</span> HuggingFaceLLM<span class="token punctuation">(</span>    context_window<span class="token operator">=</span><span class="token number">4096</span><span class="token punctuation">,</span>    max_new_tokens<span class="token operator">=</span><span class="token number">256</span><span class="token punctuation">,</span>    generate_kwargs<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"temperature"</span><span class="token punctuation">:</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token string">"do_sample"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    system_prompt<span class="token operator">=</span>system_prompt<span class="token punctuation">,</span>    query_wrapper_prompt<span class="token operator">=</span>query_wrapper_prompt<span class="token punctuation">,</span>    tokenizer_name<span class="token operator">=</span><span class="token string">"meta-llama/Llama-2-7b-chat-hf"</span><span class="token punctuation">,</span>    model_name<span class="token operator">=</span><span class="token string">"meta-llama/Llama-2-7b-chat-hf"</span><span class="token punctuation">,</span>    device_map<span class="token operator">=</span><span class="token string">"auto"</span><span class="token punctuation">,</span>    model_kwargs<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"torch_dtype"</span><span class="token punctuation">:</span> torch<span class="token punctuation">.</span>float16 <span class="token punctuation">,</span> <span class="token string">"load_in_8bit"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>HuggingFaceLLM</strong>: This object initializes the LLM (large language model) with specific parameters:<ul><li><strong>context_window</strong>: Maximum number of tokens the model can consider for each request.</li><li><strong>max_new_tokens</strong>: Maximum number of new tokens the model can generate per request.</li><li><strong>generate_kwargs</strong>: Controls generation settings; <code>temperature: 0.0</code> means deterministic output.</li><li><strong>system_prompt, query_wrapper_prompt</strong>: Used to format inputs to the model.</li><li><strong>tokenizer_name, model_name</strong>: Specifies the model and tokenizer from Hugging Face.</li><li><strong>device_map</strong>: Automatically places the model on the appropriate device (CPU or GPU).</li><li><strong>model_kwargs</strong>: Additional settings for model operation, like using 16-bit floating point precision and 8-bit loading to save memory.</li></ul></li></ul><h3 id="Document-Loading-and-Indexing"><a href="#Document-Loading-and-Indexing" class="headerlink" title="Document Loading and Indexing"></a>Document Loading and Indexing</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">documents <span class="token operator">=</span> SimpleDirectoryReader<span class="token punctuation">(</span><span class="token string">"/content/source/"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>load_data<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">from</span> llama_index<span class="token punctuation">.</span>prompts<span class="token punctuation">.</span>prompts <span class="token keyword">import</span> SimpleInputPromptsystem_prompt <span class="token operator">=</span> <span class="token string">"You are a Q&amp;A assistant. Your goal is to answer questions as accurately as possible based on the instructions and context provided."</span>query_wrapper_prompt <span class="token operator">=</span> SimpleInputPrompt<span class="token punctuation">(</span><span class="token string">"{query_str}"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>SimpleDirectoryReader</strong>: Loads documents from a specified directory.</li><li><strong>System and Query Prompts</strong>: Configures how the system should view its tasks and how to handle queries.</li></ul><h3 id="Embedding-and-Service-Context-Initialization"><a href="#Embedding-and-Service-Context-Initialization" class="headerlink" title="Embedding and Service Context Initialization"></a>Embedding and Service Context Initialization</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> langchain<span class="token punctuation">.</span>embeddings<span class="token punctuation">.</span>huggingface <span class="token keyword">import</span> HuggingFaceEmbeddings<span class="token keyword">from</span> llama_index<span class="token punctuation">.</span>embeddings <span class="token keyword">import</span> LangchainEmbeddingembed_model <span class="token operator">=</span> LangchainEmbedding<span class="token punctuation">(</span>  HuggingFaceEmbeddings<span class="token punctuation">(</span>model_name<span class="token operator">=</span><span class="token string">"sentence-transformers/all-mpnet-base-v2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>service_context <span class="token operator">=</span> ServiceContext<span class="token punctuation">.</span>from_defaults<span class="token punctuation">(</span>    chunk_size<span class="token operator">=</span><span class="token number">1024</span><span class="token punctuation">,</span>    llm<span class="token operator">=</span>llm<span class="token punctuation">,</span>    embed_model<span class="token operator">=</span>embed_model<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>LangchainEmbedding</strong>: Wraps the Hugging Face embedding model to generate embeddings for the documents.</li><li><strong>ServiceContext</strong>: Configures the shared context for the indexing and querying operations.</li></ul><h3 id="Query-Engine-Setup"><a href="#Query-Engine-Setup" class="headerlink" title="Query Engine Setup"></a>Query Engine Setup</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">index <span class="token operator">=</span> VectorStoreIndex<span class="token punctuation">.</span>from_documents<span class="token punctuation">(</span>documents<span class="token punctuation">,</span> service_context<span class="token operator">=</span>service_context<span class="token punctuation">)</span>query_engine <span class="token operator">=</span> index<span class="token punctuation">.</span>as_query_engine<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><strong>VectorStoreIndex</strong>: Creates an index of the loaded documents using the embeddings and LLM settings.</li><li><strong>Query Engine</strong>: Initializes a query engine from the index for processing search queries.</li></ul><h3 id="Interactive-Query-Loop"><a href="#Interactive-Query-Loop" class="headerlink" title="Interactive Query Loop"></a>Interactive Query Loop</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>  query<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  response <span class="token operator">=</span> query_engine<span class="token punctuation">.</span>query<span class="token punctuation">(</span>query<span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>This loop continuously accepts user input, processes it through the query engine, and prints out the response. It makes</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> LLM </tag>
            
            <tag> Embedding </tag>
            
            <tag> Llama2 </tag>
            
            <tag> Colab </tag>
            
            <tag> Langchain </tag>
            
            <tag> HuggingFace </tag>
            
            <tag> RAG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django | Crash Course</title>
      <link href="/2023/11/10/django-crash-course/"/>
      <url>/2023/11/10/django-crash-course/</url>
      
        <content type="html"><![CDATA[<h3 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract:"></a>Abstract:</h3><p>This article provides a comprehensive overview of a Django crash course, detailing the steps involved in creating dynamic web applications. It covers setting up a virtual environment, starting a new Django project, configuring settings, understanding the MVT (Model-View-Template) pattern, creating views and templates, integrating Bootstrap for styling, managing static files, working with Django’s admin interface, setting up a database, and creating models for tasks. Additionally, it explores functionalities such as adding, marking tasks as done, editing, and deleting tasks, along with enhancing the admin page and managing media files. Each step is accompanied by relevant code snippets and instructions to guide learners through the process effectively. Whether you’re new to Django or looking to reinforce your skills, this crash course offers a structured and hands-on approach to building powerful web applications.</p><h3 id="1-Install-virtual-env"><a href="#1-Install-virtual-env" class="headerlink" title="1, Install virtual env"></a>1, Install virtual env</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># install</span>pip install virtualenv<span class="token comment"># create a virtual env</span>python <span class="token operator">-</span>m venv <span class="token punctuation">{</span><span class="token punctuation">{</span>env name<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment"># Activate virtual env</span>source <span class="token punctuation">{</span><span class="token punctuation">{</span>env name<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">/</span><span class="token builtin">bin</span><span class="token operator">/</span>activate<span class="token comment"># Check installed libraries</span>pip freeze<span class="token comment"># Install Django library</span>pip install django<span class="token comment"># Deactivate virtual env</span>deactivate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-Start-new-Django-project"><a href="#2-Start-new-Django-project" class="headerlink" title="2, Start new Django project"></a>2, Start new Django project</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Create new project</span>django<span class="token operator">-</span>admin startproject <span class="token punctuation">{</span><span class="token punctuation">{</span>project name<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment"># Run server of the new project</span>python manage<span class="token punctuation">.</span>py runserver<span class="token comment"># Stop server </span>Ctrl <span class="token operator">+</span> C<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-Django-settings-py"><a href="#3-Django-settings-py" class="headerlink" title="3, Django settings.py"></a>3, Django <a href="http://settings.py/">settings.py</a></h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Get your root folder name automatically</span><span class="token comment"># Build paths inside the project like this: BASE_DIR / 'subdir'.</span>BASE_DIR <span class="token operator">=</span> Path<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">.</span>resolve<span class="token punctuation">(</span>strict<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>parent<span class="token punctuation">.</span>parent<span class="token comment"># SECURITY WARNING: keep the secret key used in production secret!</span><span class="token comment"># Being used to HASH function like password</span>SECRET_KEY <span class="token operator">=</span> <span class="token string">'YOUR_SECURITY_KEY'</span><span class="token comment"># SECURITY WARNING: don't run with debug turned on in production!</span><span class="token comment"># Won't return wrong information if turned off</span>DEBUG <span class="token operator">=</span> <span class="token boolean">True</span><span class="token comment"># Add your domain inside it in Prod env</span>ALLOWED_HOSTS <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment"># Application definition, Django official modules</span>INSTALLED_APPS <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'django.contrib.admin'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.auth'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.contenttypes'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.sessions'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.messages'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.staticfiles'</span><span class="token punctuation">,</span><span class="token punctuation">]</span>MIDDLEWARE <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'django.middleware.security.SecurityMiddleware'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.sessions.middleware.SessionMiddleware'</span><span class="token punctuation">,</span>    <span class="token string">'django.middleware.common.CommonMiddleware'</span><span class="token punctuation">,</span>    <span class="token string">'django.middleware.csrf.CsrfViewMiddleware'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.auth.middleware.AuthenticationMiddleware'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.messages.middleware.MessageMiddleware'</span><span class="token punctuation">,</span>    <span class="token string">'django.middleware.clickjacking.XFrameOptionsMiddleware'</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token comment"># Define the location of the global url</span>ROOT_URLCONF <span class="token operator">=</span> <span class="token string">'ecom.urls'</span><span class="token comment"># Define where to get the front end templates</span>TEMPLATES <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>        <span class="token string">'BACKEND'</span><span class="token punctuation">:</span> <span class="token string">'django.template.backends.django.DjangoTemplates'</span><span class="token punctuation">,</span>        <span class="token string">'DIRS'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'APP_DIRS'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>        <span class="token string">'OPTIONS'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>            <span class="token string">'context_processors'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>                <span class="token string">'django.template.context_processors.debug'</span><span class="token punctuation">,</span>                <span class="token string">'django.template.context_processors.request'</span><span class="token punctuation">,</span>                <span class="token string">'django.contrib.auth.context_processors.auth'</span><span class="token punctuation">,</span>                <span class="token string">'django.contrib.messages.context_processors.messages'</span><span class="token punctuation">,</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token comment"># Define the location of wsgi (for deployment)</span>WSGI_APPLICATION <span class="token operator">=</span> <span class="token string">'ecom.wsgi.application'</span><span class="token comment"># Config database, default is sqlite3</span>DATABASES <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'default'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token string">'ENGINE'</span><span class="token punctuation">:</span> <span class="token string">'django.db.backends.sqlite3'</span><span class="token punctuation">,</span>        <span class="token string">'NAME'</span><span class="token punctuation">:</span> BASE_DIR <span class="token operator">/</span> <span class="token string">'db.sqlite3'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment"># Validate the passwords used in application</span>AUTH_PASSWORD_VALIDATORS <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>        <span class="token string">'NAME'</span><span class="token punctuation">:</span> <span class="token string">'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        <span class="token string">'NAME'</span><span class="token punctuation">:</span> <span class="token string">'django.contrib.auth.password_validation.MinimumLengthValidator'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        <span class="token string">'NAME'</span><span class="token punctuation">:</span> <span class="token string">'django.contrib.auth.password_validation.CommonPasswordValidator'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        <span class="token string">'NAME'</span><span class="token punctuation">:</span> <span class="token string">'django.contrib.auth.password_validation.NumericPasswordValidator'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token comment"># Internationalization</span><span class="token comment"># https://docs.djangoproject.com/en/3.1/topics/i18n/</span><span class="token comment"># Set language, time zone etc</span>LANGUAGE_CODE <span class="token operator">=</span> <span class="token string">'en-us'</span>TIME_ZONE <span class="token operator">=</span> <span class="token string">'UTC'</span>USE_I18N <span class="token operator">=</span> <span class="token boolean">True</span>USE_L10N <span class="token operator">=</span> <span class="token boolean">True</span>USE_TZ <span class="token operator">=</span> <span class="token boolean">True</span><span class="token comment"># Static files (CSS, JavaScript, Images)</span><span class="token comment"># https://docs.djangoproject.com/en/3.1/howto/static-files/</span><span class="token comment"># Set the location of static files</span>STATIC_URL <span class="token operator">=</span> <span class="token string">'/static/'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-Django-MVT-pattern"><a href="#4-Django-MVT-pattern" class="headerlink" title="4, Django MVT pattern"></a>4, Django MVT pattern</h3><p><img src="https://chenblog.s3.ap-northeast-1.amazonaws.com/Covers/Django+%7C+MVT.png"></p><h3 id="5-Create-a-homepage-to-print-‘Hello-Word’"><a href="#5-Create-a-homepage-to-print-‘Hello-Word’" class="headerlink" title="5, Create a homepage to print ‘Hello Word’"></a>5, Create a homepage to print ‘Hello Word’</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Global urls.py</span><span class="token keyword">from</span> <span class="token punctuation">.</span> <span class="token keyword">import</span> viewsurlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>    path<span class="token punctuation">(</span><span class="token string">'admin/'</span><span class="token punctuation">,</span> admin<span class="token punctuation">.</span>site<span class="token punctuation">.</span>urls<span class="token punctuation">)</span><span class="token punctuation">,</span>    path<span class="token punctuation">(</span><span class="token string">'home/'</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>home<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token comment"># GLobal views.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>http <span class="token keyword">import</span> HttpResponse<span class="token keyword">def</span> <span class="token function">home</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> HttpResponse<span class="token punctuation">(</span><span class="token string">'&lt;h3&gt; Hello World &lt;/h3&gt;'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-Render-the-home-page-from-templates"><a href="#6-Render-the-home-page-from-templates" class="headerlink" title="6, Render the home page from templates"></a>6, Render the home page from templates</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Global views.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>shortcuts <span class="token keyword">import</span> render<span class="token keyword">def</span> <span class="token function">home</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">'home.html'</span><span class="token punctuation">)</span><span class="token comment"># Create templates/home.html</span><span class="token operator">&lt;</span>h3<span class="token operator">&gt;</span> Hello World <span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span><span class="token comment"># Global settings</span><span class="token string">'DIRS'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'templates'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-Add-bootstrap-into-html"><a href="#7-Add-bootstrap-into-html" class="headerlink" title="7, Add bootstrap into html"></a>7, Add bootstrap into html</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">&lt;</span>!DOCTYPE html<span class="token operator">&gt;</span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>link href<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> integrity<span class="token operator">=</span><span class="token string">"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"</span> crossorigin<span class="token operator">=</span><span class="token string">"anonymous"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"</span> integrity<span class="token operator">=</span><span class="token string">"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"</span> crossorigin<span class="token operator">=</span><span class="token string">"anonymous"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">&gt;</span>    ss    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="8-Config-static-files-for-Django-CSS-Images"><a href="#8-Config-static-files-for-Django-CSS-Images" class="headerlink" title="8, Config static files for Django (CSS+Images)"></a>8, Config static files for Django (CSS+Images)</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Create ecom/statics/css/style.css</span>body<span class="token punctuation">{</span>    background<span class="token operator">-</span>color<span class="token punctuation">:</span> aqua<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment"># Create ecom/statics/images/yourimg.png</span><span class="token comment"># Global settings.py</span>STATIC_URL <span class="token operator">=</span> <span class="token string">'/static/'</span>STATIC_ROOT <span class="token operator">=</span> BASE_DIR <span class="token operator">/</span><span class="token string">'static'</span> <span class="token comment"># for deployment, collect static</span>STATICFILES_DIRS <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'ecom/static'</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token comment"># Use static inside home.html</span><span class="token punctuation">{</span><span class="token operator">%</span> load static <span class="token operator">%</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>!DOCTYPE html<span class="token operator">&gt;</span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>link href<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> integrity<span class="token operator">=</span><span class="token string">"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"</span> crossorigin<span class="token operator">=</span><span class="token string">"anonymous"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"</span> integrity<span class="token operator">=</span><span class="token string">"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"</span> crossorigin<span class="token operator">=</span><span class="token string">"anonymous"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> href<span class="token operator">=</span><span class="token string">"{% static 'css/style.css' %}"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">&gt;</span>    ss    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"{% static 'images/IMG_3776.JPG' %}"</span> alt<span class="token operator">=</span><span class="token string">""</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="9-python-manage-py-startapp"><a href="#9-python-manage-py-startapp" class="headerlink" title="9, python manage.py startapp "></a>9, python <a href="http://manage.py/">manage.py</a> startapp </h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># admin.py -&gt; decide whether and how to show tables in admin page</span><span class="token comment"># apps.py -&gt; add apps configuration</span><span class="token comment"># models.py -&gt; create tables</span><span class="token comment"># tests.py -&gt; create test function</span><span class="token comment"># views.py -&gt; create functions (logic of your app)</span><span class="token comment"># add into settings</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="10-Django-admin-page"><a href="#10-Django-admin-page" class="headerlink" title="10, Django admin page"></a>10, Django admin page</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">python manage<span class="token punctuation">.</span>py migratepython manage<span class="token punctuation">.</span>py createsuperuser<span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token punctuation">:</span><span class="token number">8000</span><span class="token operator">/</span>admin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="11-Create-the-table-in-the-new-app-models-py"><a href="#11-Create-the-table-in-the-new-app-models-py" class="headerlink" title="11, Create the table in the new app models.py"></a>11, Create the table in the new app <a href="http://models.py/">models.py</a></h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> models<span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>    first_name <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>    last_name <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>    photo <span class="token operator">=</span> models<span class="token punctuation">.</span>ImageField<span class="token punctuation">(</span>upload_to<span class="token operator">=</span><span class="token string">'image'</span><span class="token punctuation">)</span>    nick_name <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>    email_address <span class="token operator">=</span> models<span class="token punctuation">.</span>EmailField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> unique<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    phone_number <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span> blank<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    created_at <span class="token operator">=</span> models<span class="token punctuation">.</span>DateTimeField<span class="token punctuation">(</span>auto_now_add<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    updated_at <span class="token operator">=</span> models<span class="token punctuation">.</span>DateTimeField<span class="token punctuation">(</span>auto_now<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>first_name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="12-Migrate-to-database"><a href="#12-Migrate-to-database" class="headerlink" title="12, Migrate to database"></a>12, Migrate to database</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">python manage<span class="token punctuation">.</span>py makemigrationspython manage<span class="token punctuation">.</span>py migrate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="13-Register-the-table-into-admin-page"><a href="#13-Register-the-table-into-admin-page" class="headerlink" title="13, Register the table into admin page"></a>13, Register the table into admin page</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> django<span class="token punctuation">.</span>contrib <span class="token keyword">import</span> admin<span class="token keyword">from</span> <span class="token punctuation">.</span>models <span class="token keyword">import</span> Useradmin<span class="token punctuation">.</span>site<span class="token punctuation">.</span>register<span class="token punctuation">(</span>User<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="14-Config-media-folder"><a href="#14-Config-media-folder" class="headerlink" title="14, Config media folder"></a>14, Config media folder</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Global settings.py -&gt;</span><span class="token comment"># Media files configuration</span>MEDIA_URL <span class="token operator">=</span> <span class="token string">'/media/'</span>MEDIA_ROOT <span class="token operator">=</span> BASE_DIR <span class="token operator">/</span><span class="token string">'media'</span><span class="token comment"># Create a media folder</span><span class="token comment"># Global urls.py -&gt;</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>contrib <span class="token keyword">import</span> admin<span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> path<span class="token keyword">from</span> <span class="token punctuation">.</span> <span class="token keyword">import</span> views<span class="token keyword">from</span> django<span class="token punctuation">.</span>conf <span class="token keyword">import</span> settings<span class="token keyword">from</span> django<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>urls<span class="token punctuation">.</span>static <span class="token keyword">import</span> staticurlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>    path<span class="token punctuation">(</span><span class="token string">'admin/'</span><span class="token punctuation">,</span> admin<span class="token punctuation">.</span>site<span class="token punctuation">.</span>urls<span class="token punctuation">)</span><span class="token punctuation">,</span>    path<span class="token punctuation">(</span><span class="token string">'home/'</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>home<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span> static<span class="token punctuation">(</span>settings<span class="token punctuation">.</span>MEDIA_URL<span class="token punctuation">,</span> document_root<span class="token operator">=</span>settings<span class="token punctuation">.</span>MEDIA_ROOT<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="15-Fetch-data-from-previous-table"><a href="#15-Fetch-data-from-previous-table" class="headerlink" title="15, Fetch data from previous table"></a>15, Fetch data from previous table</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Global view.py</span><span class="token keyword">from</span> firstapp<span class="token punctuation">.</span>models <span class="token keyword">import</span> User<span class="token keyword">def</span> <span class="token function">home</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    users <span class="token operator">=</span> User<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    context <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'users'</span><span class="token punctuation">:</span> users<span class="token punctuation">,</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">'home.html'</span><span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token comment"># home.html</span><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> users <span class="token operator">%</span><span class="token punctuation">}</span>      <span class="token operator">&lt;</span>h4<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> i <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">&gt;</span>    <span class="token punctuation">{</span><span class="token operator">%</span> endfor <span class="token operator">%</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="16-Show-data-on-the-html-table"><a href="#16-Show-data-on-the-html-table" class="headerlink" title="16, Show data on the html table"></a>16, Show data on the html table</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">{</span><span class="token operator">%</span> load static <span class="token operator">%</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>!DOCTYPE html<span class="token operator">&gt;</span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>link href<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> integrity<span class="token operator">=</span><span class="token string">"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"</span> crossorigin<span class="token operator">=</span><span class="token string">"anonymous"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"</span> integrity<span class="token operator">=</span><span class="token string">"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"</span> crossorigin<span class="token operator">=</span><span class="token string">"anonymous"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> href<span class="token operator">=</span><span class="token string">"{% static 'css/style.css' %}"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>User List<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>table <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"table"</span><span class="token operator">&gt;</span>      <span class="token operator">&lt;</span>thead<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>tr<span class="token operator">&gt;</span>          <span class="token operator">&lt;</span>th scope<span class="token operator">=</span><span class="token string">"col"</span><span class="token operator">&gt;</span> <span class="token comment"># &lt;/th&gt;</span>          <span class="token operator">&lt;</span>th scope<span class="token operator">=</span><span class="token string">"col"</span><span class="token operator">&gt;</span> Full Name<span class="token operator">&lt;</span><span class="token operator">/</span>th<span class="token operator">&gt;</span>          <span class="token operator">&lt;</span>th scope<span class="token operator">=</span><span class="token string">"col"</span><span class="token operator">&gt;</span> Email <span class="token operator">&lt;</span><span class="token operator">/</span>th<span class="token operator">&gt;</span>          <span class="token operator">&lt;</span>th scope<span class="token operator">=</span><span class="token string">"col"</span><span class="token operator">&gt;</span> Phone <span class="token operator">&lt;</span><span class="token operator">/</span>th<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">&gt;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>thead<span class="token operator">&gt;</span>  <span class="token operator">&lt;</span>tbody<span class="token operator">&gt;</span>    <span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">for</span> u <span class="token keyword">in</span> users <span class="token operator">%</span><span class="token punctuation">}</span>    <span class="token operator">&lt;</span>tr<span class="token operator">&gt;</span>      <span class="token operator">&lt;</span>th<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> forloop<span class="token punctuation">.</span>counter <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>th<span class="token operator">&gt;</span>      <span class="token operator">&lt;</span>th<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>u<span class="token punctuation">.</span>first_name<span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>u<span class="token punctuation">.</span>last_name<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>th<span class="token operator">&gt;</span>      <span class="token operator">&lt;</span>th<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>u<span class="token punctuation">.</span>email_address<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>th<span class="token operator">&gt;</span>      <span class="token operator">&lt;</span>th<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>u<span class="token punctuation">.</span>phone_number<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>th<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">&gt;</span>    <span class="token punctuation">{</span><span class="token operator">%</span> endfor <span class="token operator">%</span><span class="token punctuation">}</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>tbody<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>table<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="17-Detail-page-of-each-user"><a href="#17-Detail-page-of-each-user" class="headerlink" title="17, Detail page of each user"></a>17, Detail page of each user</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Global urls.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> path<span class="token punctuation">,</span> includepath<span class="token punctuation">(</span><span class="token string">'users/'</span><span class="token punctuation">,</span> include<span class="token punctuation">(</span><span class="token string">'firstapp.urls'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># firstapp/urls.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> path<span class="token keyword">from</span> <span class="token punctuation">.</span> <span class="token keyword">import</span> viewsurlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>    path<span class="token punctuation">(</span><span class="token string">'&lt;int:pk&gt;/'</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>user_detail<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'user_detail'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token comment"># firstapp/views.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>shortcuts <span class="token keyword">import</span> render<span class="token punctuation">,</span> get_object_or_404<span class="token keyword">from</span> <span class="token punctuation">.</span>models <span class="token keyword">import</span> User<span class="token keyword">def</span> <span class="token function">user_detail</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> pk<span class="token punctuation">)</span><span class="token punctuation">:</span>    user <span class="token operator">=</span> get_object_or_404<span class="token punctuation">(</span>User<span class="token punctuation">,</span> pk<span class="token operator">=</span>pk<span class="token punctuation">)</span>    context <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'user'</span><span class="token punctuation">:</span> user    <span class="token punctuation">}</span>    <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">'user_detail.html'</span><span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token comment"># templates/user_detail.html</span><span class="token punctuation">{</span><span class="token operator">%</span> load static <span class="token operator">%</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>!DOCTYPE html<span class="token operator">&gt;</span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>link href<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> integrity<span class="token operator">=</span><span class="token string">"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"</span> crossorigin<span class="token operator">=</span><span class="token string">"anonymous"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"</span> integrity<span class="token operator">=</span><span class="token string">"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"</span> crossorigin<span class="token operator">=</span><span class="token string">"anonymous"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> href<span class="token operator">=</span><span class="token string">"{% static 'css/style.css' %}"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card mx-auto"</span> style<span class="token operator">=</span><span class="token string">"width: 18rem;"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>img <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card-img-top"</span> src<span class="token operator">=</span><span class="token string">"{{ user.photo.url }}"</span> alt<span class="token operator">=</span><span class="token string">"Card image cap"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card-body"</span><span class="token operator">&gt;</span>              <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card-text"</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>user<span class="token punctuation">.</span>first_name<span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>user<span class="token punctuation">.</span>last_name<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>              <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card-text"</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>user<span class="token punctuation">.</span>email_address<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>              <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card-text"</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>user<span class="token punctuation">.</span>phone_number<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"{% url 'home' %}"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn btn-primary"</span><span class="token operator">&gt;</span>Back to Home<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span><span class="token comment"># templates/home.html</span><span class="token operator">&lt;</span>th<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"{% url 'user_detail' u.id %}"</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>u<span class="token punctuation">.</span>first_name<span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>u<span class="token punctuation">.</span>last_name<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>th<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="18-To-Do-App-→-initiate-the-project"><a href="#18-To-Do-App-→-initiate-the-project" class="headerlink" title="18, To-Do App → initiate the project"></a>18, To-Do App → initiate the project</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">python <span class="token operator">-</span>m venv envsource env<span class="token operator">/</span><span class="token builtin">bin</span><span class="token operator">/</span>activatepip install Djangodjango<span class="token operator">-</span>admin startproject todo_mainpython manage<span class="token punctuation">.</span>py migratepython manage<span class="token punctuation">.</span>py createsuperuser<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="19-Create-url-and-home-function-print-helloword-for-homepage"><a href="#19-Create-url-and-home-function-print-helloword-for-homepage" class="headerlink" title="19, Create url and home function (print helloword) for homepage"></a>19, Create url and home function (print helloword) for homepage</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Global urls.py</span><span class="token keyword">from</span> <span class="token punctuation">.</span> <span class="token keyword">import</span> viewspath<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>home<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'home'</span><span class="token punctuation">)</span><span class="token comment">#Global views.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>http <span class="token keyword">import</span> HttpResponse<span class="token keyword">def</span> <span class="token function">home</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> HttpResponse<span class="token punctuation">(</span><span class="token string">'&lt;h1&gt;HelloWorld&lt;h1/&gt;'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="20-User-render-templates-home-html-instead-of-HttpResponse"><a href="#20-User-render-templates-home-html-instead-of-HttpResponse" class="headerlink" title="20, User render templates home.html instead of HttpResponse"></a>20, User render templates home.html instead of HttpResponse</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Global views.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>shortcuts <span class="token keyword">import</span> render<span class="token keyword">def</span> <span class="token function">home</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">'home.html'</span><span class="token punctuation">)</span><span class="token comment"># Global settings.py</span><span class="token string">'DIRS'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'templates'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment"># templates/home.html</span><span class="token operator">&lt;</span>!DOCTYPE html<span class="token operator">&gt;</span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>meta http<span class="token operator">-</span>equiv<span class="token operator">=</span><span class="token string">"X-UA-Compatible"</span> content<span class="token operator">=</span><span class="token string">"IE=edge"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>TODO LIST <span class="token operator">-</span> Home<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>!<span class="token operator">-</span><span class="token operator">-</span> Bootstrap <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>link href<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> integrity<span class="token operator">=</span><span class="token string">"sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD"</span> crossorigin<span class="token operator">=</span><span class="token string">"anonymous"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"</span> integrity<span class="token operator">=</span><span class="token string">"sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN"</span> crossorigin<span class="token operator">=</span><span class="token string">"anonymous"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>!<span class="token operator">-</span><span class="token operator">-</span> Font Awesome Icons <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> href<span class="token operator">=</span><span class="token string">"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>style<span class="token operator">&gt;</span>        <span class="token punctuation">.</span>form<span class="token operator">-</span>control<span class="token punctuation">{</span>        padding<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">.</span>375rem <span class="token punctuation">.</span>75rem !important<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>h3 <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"pt-5 text-center"</span><span class="token operator">&gt;</span>Django ToDo App<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"row"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>h4<span class="token operator">&gt;</span>My Day<span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"text-muted"</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token operator">%</span> now <span class="token string">"jS F Y"</span> <span class="token operator">%</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"col-md-7 col-lg-7"</span> style<span class="token operator">=</span><span class="token string">"height: 450px; overflow: scroll;"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>!<span class="token operator">-</span><span class="token operator">-</span> List of <span class="token builtin">all</span> the tasks <span class="token keyword">for</span> the day <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card m-1"</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card-body"</span><span class="token operator">&gt;</span>                        This <span class="token keyword">is</span> some Task                        <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"position: relative; float: right;"</span><span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn btn-success"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-check"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span> Mark <span class="token keyword">as</span> Done<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn btn-danger"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-trash"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn btn-primary"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-pencil"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>                           <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"col-md-5 col-lg-5"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>h5<span class="token operator">&gt;</span>Completed Tasks<span class="token operator">&lt;</span><span class="token operator">/</span>h5<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>!<span class="token operator">-</span><span class="token operator">-</span> List of <span class="token builtin">all</span> the tasks that have completed <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card m-1"</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card-body"</span><span class="token operator">&gt;</span>                        This <span class="token keyword">is</span> the completed task<span class="token punctuation">.</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"row"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"col-md-6 col-lg-6 p-0"</span> style<span class="token operator">=</span><span class="token string">"position: absolute; bottom: 50px;"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>!<span class="token operator">-</span><span class="token operator">-</span> To Do Form <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">""</span> <span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-group"</span><span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"display: flex;"</span><span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span><span class="token builtin">input</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">"text"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-control"</span> placeholder<span class="token operator">=</span><span class="token string">"Add a task"</span><span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>button <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn btn-primary"</span> style<span class="token operator">=</span><span class="token string">"width: 200px;"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-plus"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span> Add<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="21-GitHub-Crash"><a href="#21-GitHub-Crash" class="headerlink" title="21, GitHub Crash"></a>21, GitHub Crash</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token number">1.</span> Create a repo inside github<span class="token number">2.</span> git init<span class="token number">3.</span> git add <span class="token operator">-</span>A<span class="token number">4.</span> git commit <span class="token operator">-</span>m <span class="token string">"first commit"</span><span class="token number">5.</span> git branch <span class="token operator">-</span>M main<span class="token number">6.</span> git remote add origin git@github<span class="token punctuation">.</span>com<span class="token punctuation">:</span>chenchen0324<span class="token operator">/</span>ToDo<span class="token operator">-</span>Django<span class="token punctuation">.</span>git<span class="token number">7.</span> git push <span class="token operator">-</span>u origin main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="22-Start-todo-app-and-create-Task-table-in-models-py"><a href="#22-Start-todo-app-and-create-Task-table-in-models-py" class="headerlink" title="22, Start todo app and create Task table in models.py"></a>22, Start todo app and create Task table in models.py</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">python manage<span class="token punctuation">.</span>py startapp todoupdate settings<span class="token punctuation">.</span>py INSTALLED_APPS<span class="token comment"># todo/models.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> models<span class="token keyword">class</span> <span class="token class-name">Task</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>    task <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">255</span><span class="token punctuation">)</span>    is_completed <span class="token operator">=</span> models<span class="token punctuation">.</span>BooleanField<span class="token punctuation">(</span>default<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>    created_at <span class="token operator">=</span> models<span class="token punctuation">.</span>DateTimeField<span class="token punctuation">(</span>auto_now_add<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    updated_at <span class="token operator">=</span> models<span class="token punctuation">.</span>DateTimeField<span class="token punctuation">(</span>auto_now<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>task<span class="token comment"># todo/admin.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>contrib <span class="token keyword">import</span> admin<span class="token keyword">from</span> <span class="token punctuation">.</span>models <span class="token keyword">import</span> Taskadmin<span class="token punctuation">.</span>site<span class="token punctuation">.</span>register<span class="token punctuation">(</span>Task<span class="token punctuation">)</span><span class="token comment"># Migrate</span><span class="token comment"># check in admin page and add some tasks</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="23-Fetch-Task-data-and-put-into-home-html"><a href="#23-Fetch-Task-data-and-put-into-home-html" class="headerlink" title="23, Fetch Task data and put into home.html"></a>23, Fetch Task data and put into home.html</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Global views.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>shortcuts <span class="token keyword">import</span> render<span class="token keyword">from</span> todo<span class="token punctuation">.</span>models <span class="token keyword">import</span> Task<span class="token keyword">def</span> <span class="token function">home</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    tasks <span class="token operator">=</span> Task<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>is_completed<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>order_by<span class="token punctuation">(</span><span class="token string">'updated_at'</span><span class="token punctuation">)</span>    context <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'tasks'</span><span class="token punctuation">:</span> tasks<span class="token punctuation">,</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">'home.html'</span><span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token comment"># home.html</span><span class="token operator">&lt;</span>!<span class="token operator">-</span><span class="token operator">-</span> List of <span class="token builtin">all</span> the tasks <span class="token keyword">for</span> the day <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">for</span> task <span class="token keyword">in</span> tasks <span class="token operator">%</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card m-1"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card-body"</span><span class="token operator">&gt;</span>        <span class="token punctuation">{</span><span class="token punctuation">{</span> task<span class="token punctuation">.</span>task <span class="token punctuation">}</span><span class="token punctuation">}</span>        <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"position: relative; float: right;"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn btn-success"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-check"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span> Mark <span class="token keyword">as</span> Done<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn btn-danger"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-trash"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn btn-primary"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-pencil"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token operator">%</span> endfor <span class="token operator">%</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="24-Admin-page-enhancements"><a href="#24-Admin-page-enhancements" class="headerlink" title="24, Admin page enhancements"></a>24, Admin page enhancements</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> django<span class="token punctuation">.</span>contrib <span class="token keyword">import</span> admin<span class="token keyword">from</span> <span class="token punctuation">.</span>models <span class="token keyword">import</span> Task<span class="token keyword">class</span> <span class="token class-name">TaskAdmin</span><span class="token punctuation">(</span>admin<span class="token punctuation">.</span>ModelAdmin<span class="token punctuation">)</span><span class="token punctuation">:</span>    list_display <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'task'</span><span class="token punctuation">,</span> <span class="token string">'is_completed'</span><span class="token punctuation">,</span> <span class="token string">'updated_at'</span><span class="token punctuation">)</span>    search_fields <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'task'</span><span class="token punctuation">,</span><span class="token punctuation">)</span>admin<span class="token punctuation">.</span>site<span class="token punctuation">.</span>register<span class="token punctuation">(</span>Task<span class="token punctuation">,</span> TaskAdmin<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="25-Add-Task-function"><a href="#25-Add-Task-function" class="headerlink" title="25, Add Task function"></a>25, Add Task function</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Global urls.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> path<span class="token punctuation">,</span> includepath<span class="token punctuation">(</span><span class="token string">'todo/'</span><span class="token punctuation">,</span> include<span class="token punctuation">(</span><span class="token string">'todo.urls'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment"># todo/urls.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> path<span class="token keyword">from</span> <span class="token punctuation">.</span> <span class="token keyword">import</span> viewsurlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>    path<span class="token punctuation">(</span><span class="token string">'addTask/'</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>addTask<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'addTask'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token comment"># todo/views.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>shortcuts <span class="token keyword">import</span> render<span class="token punctuation">,</span> redirect<span class="token keyword">from</span> <span class="token punctuation">.</span>models <span class="token keyword">import</span> Task<span class="token keyword">def</span> <span class="token function">addTask</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    task <span class="token operator">=</span> request<span class="token punctuation">.</span>POST<span class="token punctuation">[</span><span class="token string">'task'</span><span class="token punctuation">]</span>    Task<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>create<span class="token punctuation">(</span>task<span class="token operator">=</span>task<span class="token punctuation">)</span>    <span class="token keyword">return</span> redirect<span class="token punctuation">(</span><span class="token string">'home'</span><span class="token punctuation">)</span><span class="token comment"># home.html</span><span class="token operator">&lt;</span>!<span class="token operator">-</span><span class="token operator">-</span> To Do Form <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">"{% url 'addTask' %}"</span> method<span class="token operator">=</span><span class="token string">"POST"</span> <span class="token operator">&gt;</span>    <span class="token punctuation">{</span><span class="token operator">%</span> csrf_token <span class="token operator">%</span><span class="token punctuation">}</span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-group"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"display: flex;"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token builtin">input</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"task"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-control"</span> placeholder<span class="token operator">=</span><span class="token string">"Add a task"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>button <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">"submit"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn btn-primary"</span> style<span class="token operator">=</span><span class="token string">"width: 200px;"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-plus"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span> Add<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="26-Show-completed-tasks-in-home-page"><a href="#26-Show-completed-tasks-in-home-page" class="headerlink" title="26, Show completed tasks in home page"></a>26, Show completed tasks in home page</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Global views.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>shortcuts <span class="token keyword">import</span> render<span class="token keyword">from</span> todo<span class="token punctuation">.</span>models <span class="token keyword">import</span> Task<span class="token keyword">def</span> <span class="token function">home</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    tasks <span class="token operator">=</span> Task<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>is_completed<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>order_by<span class="token punctuation">(</span><span class="token string">'updated_at'</span><span class="token punctuation">)</span>    completed_tasks <span class="token operator">=</span> Task<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>is_completed<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>order_by<span class="token punctuation">(</span><span class="token string">'updated_at'</span><span class="token punctuation">)</span>    context <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'tasks'</span><span class="token punctuation">:</span> tasks<span class="token punctuation">,</span>        <span class="token string">'completed_tasks'</span><span class="token punctuation">:</span> completed_tasks<span class="token punctuation">,</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">'home.html'</span><span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token comment"># home.html</span><span class="token operator">&lt;</span>!<span class="token operator">-</span><span class="token operator">-</span> List of <span class="token builtin">all</span> the tasks that have completed <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">for</span> task <span class="token keyword">in</span> completed_tasks <span class="token operator">%</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card m-1"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card-body"</span><span class="token operator">&gt;</span>        <span class="token punctuation">{</span><span class="token punctuation">{</span> task<span class="token punctuation">.</span>task <span class="token punctuation">}</span><span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token operator">%</span> endfor <span class="token operator">%</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="27-Mark-as-done-function"><a href="#27-Mark-as-done-function" class="headerlink" title="27, Mark as done function"></a>27, Mark as done function</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># todo/urls.py</span>path<span class="token punctuation">(</span><span class="token string">'mark_as_done/&lt;int:pk&gt;/'</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>mark_as_done<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'mark_as_done'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment"># home.html</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"{% url 'mark_as_done' task.pk %}"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn btn-success"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-check"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span> Mark <span class="token keyword">as</span> Done<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token comment"># todo/views.py</span><span class="token keyword">def</span> <span class="token function">mark_as_done</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> pk<span class="token punctuation">)</span><span class="token punctuation">:</span>    task <span class="token operator">=</span> get_object_or_404<span class="token punctuation">(</span>Task<span class="token punctuation">,</span> pk<span class="token operator">=</span>pk<span class="token punctuation">)</span>    task<span class="token punctuation">.</span>is_completed <span class="token operator">=</span> <span class="token boolean">True</span>    task<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> redirect<span class="token punctuation">(</span><span class="token string">'home'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="28-Edit-task-and-Mark-as-undone-and-Delete-Task"><a href="#28-Edit-task-and-Mark-as-undone-and-Delete-Task" class="headerlink" title="28, Edit task and Mark as undone and Delete Task"></a>28, Edit task and Mark as undone and Delete Task</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># todo/urls.py</span>path<span class="token punctuation">(</span><span class="token string">'mark_as_undone/&lt;int:pk&gt;/'</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>mark_as_undone<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'mark_as_undone'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>path<span class="token punctuation">(</span><span class="token string">'edit_task/&lt;int:pk&gt;/'</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>edit_task<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'edit_task'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>path<span class="token punctuation">(</span><span class="token string">'delete_task/&lt;int:pk&gt;/'</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>delete_task<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'delete_task'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment"># home.html</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"{% url 'delete_task' task.pk %}"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn btn-danger"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-trash"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"{% url 'edit_task' task.pk %}"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn btn-primary"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-pencil"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> task<span class="token punctuation">.</span>task <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"position: relative; float: right;"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"{% url 'mark_as_undone' task.pk %}"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn btn-danger"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-check"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span> Mark <span class="token keyword">as</span> Undone<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span><span class="token comment"># todo/views.py</span><span class="token keyword">def</span> <span class="token function">mark_as_undone</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> pk<span class="token punctuation">)</span><span class="token punctuation">:</span>    task <span class="token operator">=</span> get_object_or_404<span class="token punctuation">(</span>Task<span class="token punctuation">,</span> pk<span class="token operator">=</span>pk<span class="token punctuation">)</span>    task<span class="token punctuation">.</span>is_completed <span class="token operator">=</span> <span class="token boolean">False</span>    task<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> redirect<span class="token punctuation">(</span><span class="token string">'home'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">delete_task</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> pk<span class="token punctuation">)</span><span class="token punctuation">:</span>    task <span class="token operator">=</span> get_object_or_404<span class="token punctuation">(</span>Task<span class="token punctuation">,</span> pk<span class="token operator">=</span>pk<span class="token punctuation">)</span>    task<span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> redirect<span class="token punctuation">(</span><span class="token string">'home'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">edit_task</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> pk<span class="token punctuation">)</span><span class="token punctuation">:</span>    get_task <span class="token operator">=</span> get_object_or_404<span class="token punctuation">(</span>Task<span class="token punctuation">,</span> pk<span class="token operator">=</span>pk<span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        get_task<span class="token punctuation">.</span>task <span class="token operator">=</span> request<span class="token punctuation">.</span>POST<span class="token punctuation">[</span><span class="token string">'task'</span><span class="token punctuation">]</span>        get_task<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span><span class="token string">'home'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        context <span class="token operator">=</span> <span class="token punctuation">{</span>            <span class="token string">'get_task'</span><span class="token punctuation">:</span> get_task<span class="token punctuation">,</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">'edit_task.html'</span><span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token comment"># edit_task.html</span><span class="token operator">&lt;</span>!DOCTYPE html<span class="token operator">&gt;</span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>Edit Task<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>!<span class="token operator">-</span><span class="token operator">-</span> Bootstrap <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>link href<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> integrity<span class="token operator">=</span><span class="token string">"sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD"</span> crossorigin<span class="token operator">=</span><span class="token string">"anonymous"</span><span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"</span> integrity<span class="token operator">=</span><span class="token string">"sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN"</span> crossorigin<span class="token operator">=</span><span class="token string">"anonymous"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>!<span class="token operator">-</span><span class="token operator">-</span> Font Awesome Icons <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> href<span class="token operator">=</span><span class="token string">"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>h3 <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"pt-5 pb-5 text-center"</span><span class="token operator">&gt;</span>Edit Task<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>!<span class="token operator">-</span><span class="token operator">-</span> To Do Form <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">"{% url 'edit_task' get_task.pk %}"</span> method<span class="token operator">=</span><span class="token string">"POST"</span> style<span class="token operator">=</span><span class="token string">"width:500px; margin: auto;"</span><span class="token operator">&gt;</span>        <span class="token punctuation">{</span><span class="token operator">%</span> csrf_token <span class="token operator">%</span><span class="token punctuation">}</span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-group"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"display: flex;"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token builtin">input</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"task"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-control"</span> placeholder<span class="token operator">=</span><span class="token string">"Add a task"</span> value<span class="token operator">=</span><span class="token string">"{{ get_task.task}}"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>button <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">"submit"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn btn-primary"</span> style<span class="token operator">=</span><span class="token string">"width: 200px;"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-plus"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span> Update<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Django </tag>
            
            <tag> Crash Course </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo | Crafting your digital home</title>
      <link href="/2023/10/26/hexo-crafting-your-digital-home/"/>
      <url>/2023/10/26/hexo-crafting-your-digital-home/</url>
      
        <content type="html"><![CDATA[<h3 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract:"></a>Abstract:</h3><p>This article outlines a comprehensive guide to using Hexo, a powerful static site generator, to create and customize your digital home. It covers the installation process, setting up a new project, replacing themes, deploying to GitHub Pages, configuring the chosen theme, and adding a custom domain. The guide provides detailed step-by-step instructions, including code snippets and configuration tips, to help users navigate each stage of the process seamlessly. Whether you’re a beginner or an experienced developer, this guide empowers you to craft a personalized and professional website using Hexo.</p><h3 id="Install-requirements"><a href="#Install-requirements" class="headerlink" title="Install requirements"></a>Install requirements</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>, Install Git<span class="token number">2</span>, Install Node.js<span class="token number">3</span>, $ <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Initial-new-project"><a href="#Initial-new-project" class="headerlink" title="Initial new project"></a>Initial new project</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>, $ hexo init <span class="token punctuation">{</span><span class="token punctuation">{</span>folder<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token number">2</span>, $ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="Replace-the-theme"><a href="#Replace-the-theme" class="headerlink" title="Replace the theme"></a>Replace the theme</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>, $ <span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git<span class="token number">2</span>, Copy the <span class="token variable"><span class="token variable">`</span>hexo-theme-matery<span class="token variable">`</span></span> folder to your <span class="token variable"><span class="token variable">`</span>themes<span class="token variable">`</span></span>folder of your Hexo blog project.<span class="token number">3</span>, Modify the <span class="token variable"><span class="token variable">`</span>_config.yml<span class="token variable">`</span></span>of Hexo's root folder → <span class="token variable"><span class="token variable">`</span>theme: hexo-theme-matery<span class="token variable">`</span></span><span class="token number">4</span>, $ hexo server <span class="token parameter variable">-p</span> <span class="token number">4001</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Deploy-to-Github-Pages"><a href="#Deploy-to-Github-Pages" class="headerlink" title="Deploy to Github Pages"></a>Deploy to Github Pages</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>, Create a public repository <span class="token keyword">in</span> GitHub <span class="token function">which</span> name is <span class="token punctuation">{</span><span class="token punctuation">{</span>username<span class="token punctuation">}</span><span class="token punctuation">}</span>+”.github.io”<span class="token number">2</span>, Update <span class="token variable"><span class="token variable">`</span>_config.yml<span class="token variable">`</span></span>deploy:  type: <span class="token function">git</span>  repo: <span class="token punctuation">{</span><span class="token punctuation">{</span>SSH of your repository<span class="token punctuation">}</span><span class="token punctuation">}</span>  branch: main<span class="token number">3</span>, $ hexo generate<span class="token number">4</span>, $ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Config-the-theme"><a href="#Config-the-theme" class="headerlink" title="Config the theme"></a>Config the theme</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token number">1</span><span class="token punctuation">,</span> Create page <span class="token keyword">for</span> each tab<span class="token number">2</span><span class="token punctuation">,</span> Also<span class="token punctuation">,</span> create a new `_data` directory <span class="token keyword">in</span> your blog's `source` directory<span class="token number">3</span><span class="token punctuation">,</span> Create a new `friends<span class="token punctuation">.</span>json` <span class="token builtin">file</span> <span class="token keyword">in</span> the `_data`directory<span class="token punctuation">.</span><span class="token number">4</span><span class="token punctuation">,</span> Secondary menu configuration method <span class="token punctuation">(</span>optional<span class="token punctuation">)</span><span class="token number">5</span><span class="token punctuation">,</span> Check Search function<span class="token number">6</span><span class="token punctuation">,</span> Translate Chinese Link to Pinyin<span class="token number">7</span><span class="token punctuation">,</span> Post word count statistics plugin <span class="token punctuation">(</span>Recommended<span class="token punctuation">)</span><span class="token number">8</span><span class="token punctuation">,</span> Add emoji support <span class="token punctuation">(</span>Optional<span class="token punctuation">)</span><span class="token number">9</span><span class="token punctuation">,</span> Modify website footer<span class="token number">10</span><span class="token punctuation">,</span> Modify social links<span class="token number">11</span><span class="token punctuation">,</span> Post Front<span class="token operator">-</span>matter<span class="token number">12</span><span class="token punctuation">,</span> Go through config<span class="token punctuation">.</span>yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Add-your-domain-for-your-website"><a href="#Add-your-domain-for-your-website" class="headerlink" title="Add your domain for your website"></a>Add your domain for your website</h3><p>1, Get your domain from google domains or AWS Route53</p><p>2, Follow the official guide <a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/about-custom-domains-and-github-pages">About custom domains and GitHub Pages - GitHub Docs</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> GitHub Pages </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
